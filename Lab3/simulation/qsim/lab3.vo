// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "04/11/2025 14:40:41"

// 
// Device: Altera EP2C35F672C6 Package FBGA672
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module c2 (
	clk_50,
	clr,
	HEX0,
	redNS,
	yellowNS,
	greenNS,
	redEW,
	yellowEW,
	greenEW,
	out);
input 	clk_50;
input 	clr;
output 	[6:0] HEX0;
output 	redNS;
output 	yellowNS;
output 	greenNS;
output 	redEW;
output 	yellowEW;
output 	greenEW;
output 	[2:0] out;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk_50~combout ;
wire \count[2]~0_combout ;
wire \count[2]~2_combout ;
wire \clr~combout ;
wire \LessThan1~0_combout ;
wire \Selector1~0_combout ;
wire \state.s3~regout ;
wire \count[0]~3_combout ;
wire \count[1]~1_combout ;
wire \led0|WideOr6~0_combout ;
wire \led0|WideOr5~0_combout ;
wire \led0|Decoder0~0_combout ;
wire \led0|WideOr3~0_combout ;
wire \led0|WideOr2~0_combout ;
wire \led0|WideOr1~0_combout ;
wire \led0|WideOr0~0_combout ;
wire \next_state.s1~0_combout ;
wire \state.s1~regout ;
wire \Selector0~0_combout ;
wire \state.s0~regout ;
wire \redNS~0_combout ;
wire \next_state.s4~0_combout ;
wire \state.s4~regout ;
wire \redEW~0_combout ;
wire \state.s2~regout ;
wire \WideOr0~0_combout ;
wire \out~2_combout ;
wire \state.s5~regout ;
wire \out~3_combout ;
wire [2:0] count;


cycloneii_io \clk_50~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\clk_50~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(clk_50));
// synopsys translate_off
defparam \clk_50~I .input_async_reset = "none";
defparam \clk_50~I .input_power_up = "low";
defparam \clk_50~I .input_register_mode = "none";
defparam \clk_50~I .input_sync_reset = "none";
defparam \clk_50~I .oe_async_reset = "none";
defparam \clk_50~I .oe_power_up = "low";
defparam \clk_50~I .oe_register_mode = "none";
defparam \clk_50~I .oe_sync_reset = "none";
defparam \clk_50~I .operation_mode = "input";
defparam \clk_50~I .output_async_reset = "none";
defparam \clk_50~I .output_power_up = "low";
defparam \clk_50~I .output_register_mode = "none";
defparam \clk_50~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_comb \count[2]~0 (
// Equation(s):
// \count[2]~0_combout  = (\state.s0~regout  & !\state.s3~regout )

	.dataa(\state.s0~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\state.s3~regout ),
	.cin(gnd),
	.combout(\count[2]~0_combout ),
	.cout());
// synopsys translate_off
defparam \count[2]~0 .lut_mask = 16'h00AA;
defparam \count[2]~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \count[2]~2 (
// Equation(s):
// \count[2]~2_combout  = (count[1] & (!\count[2]~0_combout  & (count[2] $ (count[0])))) # (!count[1] & (count[2] & ((!\count[2]~0_combout ) # (!count[0]))))

	.dataa(count[2]),
	.datab(count[1]),
	.datac(count[0]),
	.datad(\count[2]~0_combout ),
	.cin(gnd),
	.combout(\count[2]~2_combout ),
	.cout());
// synopsys translate_off
defparam \count[2]~2 .lut_mask = 16'h026A;
defparam \count[2]~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \clr~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\clr~combout ),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(clr));
// synopsys translate_off
defparam \clr~I .input_async_reset = "none";
defparam \clr~I .input_power_up = "low";
defparam \clr~I .input_register_mode = "none";
defparam \clr~I .input_sync_reset = "none";
defparam \clr~I .oe_async_reset = "none";
defparam \clr~I .oe_power_up = "low";
defparam \clr~I .oe_register_mode = "none";
defparam \clr~I .oe_sync_reset = "none";
defparam \clr~I .operation_mode = "input";
defparam \clr~I .output_async_reset = "none";
defparam \clr~I .output_power_up = "low";
defparam \clr~I .output_register_mode = "none";
defparam \clr~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_lcell_ff \count[2] (
	.clk(\clk_50~combout ),
	.datain(\count[2]~2_combout ),
	.sdata(gnd),
	.aclr(!\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(count[2]));

cycloneii_lcell_comb \LessThan1~0 (
// Equation(s):
// \LessThan1~0_combout  = ((!count[1] & !count[0])) # (!count[2])

	.dataa(vcc),
	.datab(count[1]),
	.datac(count[0]),
	.datad(count[2]),
	.cin(gnd),
	.combout(\LessThan1~0_combout ),
	.cout());
// synopsys translate_off
defparam \LessThan1~0 .lut_mask = 16'h03FF;
defparam \LessThan1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \Selector1~0 (
// Equation(s):
// \Selector1~0_combout  = (\state.s2~regout ) # ((\state.s3~regout  & \LessThan1~0_combout ))

	.dataa(\state.s2~regout ),
	.datab(\state.s3~regout ),
	.datac(\LessThan1~0_combout ),
	.datad(vcc),
	.cin(gnd),
	.combout(\Selector1~0_combout ),
	.cout());
// synopsys translate_off
defparam \Selector1~0 .lut_mask = 16'hEAEA;
defparam \Selector1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \state.s3 (
	.clk(\clk_50~combout ),
	.datain(\Selector1~0_combout ),
	.sdata(gnd),
	.aclr(!\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\state.s3~regout ));

cycloneii_lcell_comb \count[0]~3 (
// Equation(s):
// \count[0]~3_combout  = (\state.s0~regout  & ((\state.s3~regout  & ((!count[0]))) # (!\state.s3~regout  & (!count[2] & count[0])))) # (!\state.s0~regout  & (((!count[0]))))

	.dataa(\state.s0~regout ),
	.datab(\state.s3~regout ),
	.datac(count[2]),
	.datad(count[0]),
	.cin(gnd),
	.combout(\count[0]~3_combout ),
	.cout());
// synopsys translate_off
defparam \count[0]~3 .lut_mask = 16'h02DD;
defparam \count[0]~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \count[0] (
	.clk(\clk_50~combout ),
	.datain(\count[0]~3_combout ),
	.sdata(gnd),
	.aclr(!\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(count[0]));

cycloneii_lcell_comb \count[1]~1 (
// Equation(s):
// \count[1]~1_combout  = (\count[2]~0_combout  & (count[1] & ((!count[2])))) # (!\count[2]~0_combout  & (count[1] $ ((count[0]))))

	.dataa(count[1]),
	.datab(count[0]),
	.datac(\count[2]~0_combout ),
	.datad(count[2]),
	.cin(gnd),
	.combout(\count[1]~1_combout ),
	.cout());
// synopsys translate_off
defparam \count[1]~1 .lut_mask = 16'h06A6;
defparam \count[1]~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \count[1] (
	.clk(\clk_50~combout ),
	.datain(\count[1]~1_combout ),
	.sdata(gnd),
	.aclr(!\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(count[1]));

cycloneii_lcell_comb \led0|WideOr6~0 (
// Equation(s):
// \led0|WideOr6~0_combout  = (count[1]) # (count[2] $ (!count[0]))

	.dataa(count[1]),
	.datab(count[2]),
	.datac(count[0]),
	.datad(vcc),
	.cin(gnd),
	.combout(\led0|WideOr6~0_combout ),
	.cout());
// synopsys translate_off
defparam \led0|WideOr6~0 .lut_mask = 16'hEBEB;
defparam \led0|WideOr6~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \led0|WideOr5~0 (
// Equation(s):
// \led0|WideOr5~0_combout  = (count[1] $ (!count[0])) # (!count[2])

	.dataa(count[1]),
	.datab(count[0]),
	.datac(vcc),
	.datad(count[2]),
	.cin(gnd),
	.combout(\led0|WideOr5~0_combout ),
	.cout());
// synopsys translate_off
defparam \led0|WideOr5~0 .lut_mask = 16'h99FF;
defparam \led0|WideOr5~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \led0|Decoder0~0 (
// Equation(s):
// \led0|Decoder0~0_combout  = (count[1] & (!count[2] & !count[0]))

	.dataa(count[1]),
	.datab(vcc),
	.datac(count[2]),
	.datad(count[0]),
	.cin(gnd),
	.combout(\led0|Decoder0~0_combout ),
	.cout());
// synopsys translate_off
defparam \led0|Decoder0~0 .lut_mask = 16'h000A;
defparam \led0|Decoder0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \led0|WideOr3~0 (
// Equation(s):
// \led0|WideOr3~0_combout  = (count[2] & (count[0] $ (!count[1]))) # (!count[2] & (count[0] & !count[1]))

	.dataa(count[2]),
	.datab(count[0]),
	.datac(count[1]),
	.datad(vcc),
	.cin(gnd),
	.combout(\led0|WideOr3~0_combout ),
	.cout());
// synopsys translate_off
defparam \led0|WideOr3~0 .lut_mask = 16'h8686;
defparam \led0|WideOr3~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \led0|WideOr2~0 (
// Equation(s):
// \led0|WideOr2~0_combout  = (count[0]) # ((count[2] & !count[1]))

	.dataa(count[0]),
	.datab(count[2]),
	.datac(vcc),
	.datad(count[1]),
	.cin(gnd),
	.combout(\led0|WideOr2~0_combout ),
	.cout());
// synopsys translate_off
defparam \led0|WideOr2~0 .lut_mask = 16'hAAEE;
defparam \led0|WideOr2~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \led0|WideOr1~0 (
// Equation(s):
// \led0|WideOr1~0_combout  = (count[1] & ((count[0]) # (!count[2]))) # (!count[1] & (count[0] & !count[2]))

	.dataa(count[1]),
	.datab(count[0]),
	.datac(vcc),
	.datad(count[2]),
	.cin(gnd),
	.combout(\led0|WideOr1~0_combout ),
	.cout());
// synopsys translate_off
defparam \led0|WideOr1~0 .lut_mask = 16'h88EE;
defparam \led0|WideOr1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \led0|WideOr0~0 (
// Equation(s):
// \led0|WideOr0~0_combout  = (count[1] & ((!count[0]) # (!count[2]))) # (!count[1] & (count[2]))

	.dataa(vcc),
	.datab(count[1]),
	.datac(count[2]),
	.datad(count[0]),
	.cin(gnd),
	.combout(\led0|WideOr0~0_combout ),
	.cout());
// synopsys translate_off
defparam \led0|WideOr0~0 .lut_mask = 16'h3CFC;
defparam \led0|WideOr0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \next_state.s1~0 (
// Equation(s):
// \next_state.s1~0_combout  = (!\state.s0~regout  & (count[2] & ((count[1]) # (count[0]))))

	.dataa(\state.s0~regout ),
	.datab(count[1]),
	.datac(count[0]),
	.datad(count[2]),
	.cin(gnd),
	.combout(\next_state.s1~0_combout ),
	.cout());
// synopsys translate_off
defparam \next_state.s1~0 .lut_mask = 16'h5400;
defparam \next_state.s1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \state.s1 (
	.clk(\clk_50~combout ),
	.datain(\next_state.s1~0_combout ),
	.sdata(gnd),
	.aclr(!\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\state.s1~regout ));

cycloneii_lcell_comb \Selector0~0 (
// Equation(s):
// \Selector0~0_combout  = (!\state.s5~regout  & ((\state.s0~regout ) # (!\LessThan1~0_combout )))

	.dataa(\state.s5~regout ),
	.datab(\LessThan1~0_combout ),
	.datac(vcc),
	.datad(\state.s0~regout ),
	.cin(gnd),
	.combout(\Selector0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Selector0~0 .lut_mask = 16'h5511;
defparam \Selector0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \state.s0 (
	.clk(\clk_50~combout ),
	.datain(\Selector0~0_combout ),
	.sdata(gnd),
	.aclr(!\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\state.s0~regout ));

cycloneii_lcell_comb \redNS~0 (
// Equation(s):
// \redNS~0_combout  = (\state.s1~regout ) # (!\state.s0~regout )

	.dataa(\state.s1~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\state.s0~regout ),
	.cin(gnd),
	.combout(\redNS~0_combout ),
	.cout());
// synopsys translate_off
defparam \redNS~0 .lut_mask = 16'hAAFF;
defparam \redNS~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \next_state.s4~0 (
// Equation(s):
// \next_state.s4~0_combout  = (count[2] & (\state.s3~regout  & ((count[1]) # (count[0]))))

	.dataa(count[1]),
	.datab(count[0]),
	.datac(count[2]),
	.datad(\state.s3~regout ),
	.cin(gnd),
	.combout(\next_state.s4~0_combout ),
	.cout());
// synopsys translate_off
defparam \next_state.s4~0 .lut_mask = 16'hE000;
defparam \next_state.s4~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \state.s4 (
	.clk(\clk_50~combout ),
	.datain(\next_state.s4~0_combout ),
	.sdata(gnd),
	.aclr(!\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\state.s4~regout ));

cycloneii_lcell_comb \redEW~0 (
// Equation(s):
// \redEW~0_combout  = (\state.s3~regout ) # (\state.s4~regout )

	.dataa(\state.s3~regout ),
	.datab(\state.s4~regout ),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\redEW~0_combout ),
	.cout());
// synopsys translate_off
defparam \redEW~0 .lut_mask = 16'hEEEE;
defparam \redEW~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \state.s2 (
	.clk(\clk_50~combout ),
	.datain(\state.s1~regout ),
	.sdata(gnd),
	.aclr(!\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\state.s2~regout ));

cycloneii_lcell_comb \WideOr0~0 (
// Equation(s):
// \WideOr0~0_combout  = (\state.s4~regout ) # ((\state.s2~regout ) # (!\state.s0~regout ))

	.dataa(\state.s4~regout ),
	.datab(\state.s2~regout ),
	.datac(vcc),
	.datad(\state.s0~regout ),
	.cin(gnd),
	.combout(\WideOr0~0_combout ),
	.cout());
// synopsys translate_off
defparam \WideOr0~0 .lut_mask = 16'hEEFF;
defparam \WideOr0~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_comb \out~2 (
// Equation(s):
// \out~2_combout  = (\state.s3~regout ) # (\state.s2~regout )

	.dataa(\state.s3~regout ),
	.datab(\state.s2~regout ),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\out~2_combout ),
	.cout());
// synopsys translate_off
defparam \out~2 .lut_mask = 16'hEEEE;
defparam \out~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_lcell_ff \state.s5 (
	.clk(\clk_50~combout ),
	.datain(\state.s4~regout ),
	.sdata(gnd),
	.aclr(!\clr~combout ),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\state.s5~regout ));

cycloneii_lcell_comb \out~3 (
// Equation(s):
// \out~3_combout  = (\state.s4~regout ) # (\state.s5~regout )

	.dataa(\state.s4~regout ),
	.datab(\state.s5~regout ),
	.datac(vcc),
	.datad(vcc),
	.cin(gnd),
	.combout(\out~3_combout ),
	.cout());
// synopsys translate_off
defparam \out~3 .lut_mask = 16'hEEEE;
defparam \out~3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneii_io \HEX0[0]~I (
	.datain(\led0|WideOr6~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(HEX0[0]));
// synopsys translate_off
defparam \HEX0[0]~I .input_async_reset = "none";
defparam \HEX0[0]~I .input_power_up = "low";
defparam \HEX0[0]~I .input_register_mode = "none";
defparam \HEX0[0]~I .input_sync_reset = "none";
defparam \HEX0[0]~I .oe_async_reset = "none";
defparam \HEX0[0]~I .oe_power_up = "low";
defparam \HEX0[0]~I .oe_register_mode = "none";
defparam \HEX0[0]~I .oe_sync_reset = "none";
defparam \HEX0[0]~I .operation_mode = "output";
defparam \HEX0[0]~I .output_async_reset = "none";
defparam \HEX0[0]~I .output_power_up = "low";
defparam \HEX0[0]~I .output_register_mode = "none";
defparam \HEX0[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \HEX0[1]~I (
	.datain(\led0|WideOr5~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(HEX0[1]));
// synopsys translate_off
defparam \HEX0[1]~I .input_async_reset = "none";
defparam \HEX0[1]~I .input_power_up = "low";
defparam \HEX0[1]~I .input_register_mode = "none";
defparam \HEX0[1]~I .input_sync_reset = "none";
defparam \HEX0[1]~I .oe_async_reset = "none";
defparam \HEX0[1]~I .oe_power_up = "low";
defparam \HEX0[1]~I .oe_register_mode = "none";
defparam \HEX0[1]~I .oe_sync_reset = "none";
defparam \HEX0[1]~I .operation_mode = "output";
defparam \HEX0[1]~I .output_async_reset = "none";
defparam \HEX0[1]~I .output_power_up = "low";
defparam \HEX0[1]~I .output_register_mode = "none";
defparam \HEX0[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \HEX0[2]~I (
	.datain(!\led0|Decoder0~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(HEX0[2]));
// synopsys translate_off
defparam \HEX0[2]~I .input_async_reset = "none";
defparam \HEX0[2]~I .input_power_up = "low";
defparam \HEX0[2]~I .input_register_mode = "none";
defparam \HEX0[2]~I .input_sync_reset = "none";
defparam \HEX0[2]~I .oe_async_reset = "none";
defparam \HEX0[2]~I .oe_power_up = "low";
defparam \HEX0[2]~I .oe_register_mode = "none";
defparam \HEX0[2]~I .oe_sync_reset = "none";
defparam \HEX0[2]~I .operation_mode = "output";
defparam \HEX0[2]~I .output_async_reset = "none";
defparam \HEX0[2]~I .output_power_up = "low";
defparam \HEX0[2]~I .output_register_mode = "none";
defparam \HEX0[2]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \HEX0[3]~I (
	.datain(!\led0|WideOr3~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(HEX0[3]));
// synopsys translate_off
defparam \HEX0[3]~I .input_async_reset = "none";
defparam \HEX0[3]~I .input_power_up = "low";
defparam \HEX0[3]~I .input_register_mode = "none";
defparam \HEX0[3]~I .input_sync_reset = "none";
defparam \HEX0[3]~I .oe_async_reset = "none";
defparam \HEX0[3]~I .oe_power_up = "low";
defparam \HEX0[3]~I .oe_register_mode = "none";
defparam \HEX0[3]~I .oe_sync_reset = "none";
defparam \HEX0[3]~I .operation_mode = "output";
defparam \HEX0[3]~I .output_async_reset = "none";
defparam \HEX0[3]~I .output_power_up = "low";
defparam \HEX0[3]~I .output_register_mode = "none";
defparam \HEX0[3]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \HEX0[4]~I (
	.datain(!\led0|WideOr2~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(HEX0[4]));
// synopsys translate_off
defparam \HEX0[4]~I .input_async_reset = "none";
defparam \HEX0[4]~I .input_power_up = "low";
defparam \HEX0[4]~I .input_register_mode = "none";
defparam \HEX0[4]~I .input_sync_reset = "none";
defparam \HEX0[4]~I .oe_async_reset = "none";
defparam \HEX0[4]~I .oe_power_up = "low";
defparam \HEX0[4]~I .oe_register_mode = "none";
defparam \HEX0[4]~I .oe_sync_reset = "none";
defparam \HEX0[4]~I .operation_mode = "output";
defparam \HEX0[4]~I .output_async_reset = "none";
defparam \HEX0[4]~I .output_power_up = "low";
defparam \HEX0[4]~I .output_register_mode = "none";
defparam \HEX0[4]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \HEX0[5]~I (
	.datain(!\led0|WideOr1~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(HEX0[5]));
// synopsys translate_off
defparam \HEX0[5]~I .input_async_reset = "none";
defparam \HEX0[5]~I .input_power_up = "low";
defparam \HEX0[5]~I .input_register_mode = "none";
defparam \HEX0[5]~I .input_sync_reset = "none";
defparam \HEX0[5]~I .oe_async_reset = "none";
defparam \HEX0[5]~I .oe_power_up = "low";
defparam \HEX0[5]~I .oe_register_mode = "none";
defparam \HEX0[5]~I .oe_sync_reset = "none";
defparam \HEX0[5]~I .operation_mode = "output";
defparam \HEX0[5]~I .output_async_reset = "none";
defparam \HEX0[5]~I .output_power_up = "low";
defparam \HEX0[5]~I .output_register_mode = "none";
defparam \HEX0[5]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \HEX0[6]~I (
	.datain(\led0|WideOr0~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(HEX0[6]));
// synopsys translate_off
defparam \HEX0[6]~I .input_async_reset = "none";
defparam \HEX0[6]~I .input_power_up = "low";
defparam \HEX0[6]~I .input_register_mode = "none";
defparam \HEX0[6]~I .input_sync_reset = "none";
defparam \HEX0[6]~I .oe_async_reset = "none";
defparam \HEX0[6]~I .oe_power_up = "low";
defparam \HEX0[6]~I .oe_register_mode = "none";
defparam \HEX0[6]~I .oe_sync_reset = "none";
defparam \HEX0[6]~I .operation_mode = "output";
defparam \HEX0[6]~I .output_async_reset = "none";
defparam \HEX0[6]~I .output_power_up = "low";
defparam \HEX0[6]~I .output_register_mode = "none";
defparam \HEX0[6]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \redNS~I (
	.datain(!\redNS~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(redNS));
// synopsys translate_off
defparam \redNS~I .input_async_reset = "none";
defparam \redNS~I .input_power_up = "low";
defparam \redNS~I .input_register_mode = "none";
defparam \redNS~I .input_sync_reset = "none";
defparam \redNS~I .oe_async_reset = "none";
defparam \redNS~I .oe_power_up = "low";
defparam \redNS~I .oe_register_mode = "none";
defparam \redNS~I .oe_sync_reset = "none";
defparam \redNS~I .operation_mode = "output";
defparam \redNS~I .output_async_reset = "none";
defparam \redNS~I .output_power_up = "low";
defparam \redNS~I .output_register_mode = "none";
defparam \redNS~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \yellowNS~I (
	.datain(\state.s1~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(yellowNS));
// synopsys translate_off
defparam \yellowNS~I .input_async_reset = "none";
defparam \yellowNS~I .input_power_up = "low";
defparam \yellowNS~I .input_register_mode = "none";
defparam \yellowNS~I .input_sync_reset = "none";
defparam \yellowNS~I .oe_async_reset = "none";
defparam \yellowNS~I .oe_power_up = "low";
defparam \yellowNS~I .oe_register_mode = "none";
defparam \yellowNS~I .oe_sync_reset = "none";
defparam \yellowNS~I .operation_mode = "output";
defparam \yellowNS~I .output_async_reset = "none";
defparam \yellowNS~I .output_power_up = "low";
defparam \yellowNS~I .output_register_mode = "none";
defparam \yellowNS~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \greenNS~I (
	.datain(!\state.s0~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(greenNS));
// synopsys translate_off
defparam \greenNS~I .input_async_reset = "none";
defparam \greenNS~I .input_power_up = "low";
defparam \greenNS~I .input_register_mode = "none";
defparam \greenNS~I .input_sync_reset = "none";
defparam \greenNS~I .oe_async_reset = "none";
defparam \greenNS~I .oe_power_up = "low";
defparam \greenNS~I .oe_register_mode = "none";
defparam \greenNS~I .oe_sync_reset = "none";
defparam \greenNS~I .operation_mode = "output";
defparam \greenNS~I .output_async_reset = "none";
defparam \greenNS~I .output_power_up = "low";
defparam \greenNS~I .output_register_mode = "none";
defparam \greenNS~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \redEW~I (
	.datain(!\redEW~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(redEW));
// synopsys translate_off
defparam \redEW~I .input_async_reset = "none";
defparam \redEW~I .input_power_up = "low";
defparam \redEW~I .input_register_mode = "none";
defparam \redEW~I .input_sync_reset = "none";
defparam \redEW~I .oe_async_reset = "none";
defparam \redEW~I .oe_power_up = "low";
defparam \redEW~I .oe_register_mode = "none";
defparam \redEW~I .oe_sync_reset = "none";
defparam \redEW~I .operation_mode = "output";
defparam \redEW~I .output_async_reset = "none";
defparam \redEW~I .output_power_up = "low";
defparam \redEW~I .output_register_mode = "none";
defparam \redEW~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \yellowEW~I (
	.datain(\state.s4~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(yellowEW));
// synopsys translate_off
defparam \yellowEW~I .input_async_reset = "none";
defparam \yellowEW~I .input_power_up = "low";
defparam \yellowEW~I .input_register_mode = "none";
defparam \yellowEW~I .input_sync_reset = "none";
defparam \yellowEW~I .oe_async_reset = "none";
defparam \yellowEW~I .oe_power_up = "low";
defparam \yellowEW~I .oe_register_mode = "none";
defparam \yellowEW~I .oe_sync_reset = "none";
defparam \yellowEW~I .operation_mode = "output";
defparam \yellowEW~I .output_async_reset = "none";
defparam \yellowEW~I .output_power_up = "low";
defparam \yellowEW~I .output_register_mode = "none";
defparam \yellowEW~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \greenEW~I (
	.datain(\state.s3~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(greenEW));
// synopsys translate_off
defparam \greenEW~I .input_async_reset = "none";
defparam \greenEW~I .input_power_up = "low";
defparam \greenEW~I .input_register_mode = "none";
defparam \greenEW~I .input_sync_reset = "none";
defparam \greenEW~I .oe_async_reset = "none";
defparam \greenEW~I .oe_power_up = "low";
defparam \greenEW~I .oe_register_mode = "none";
defparam \greenEW~I .oe_sync_reset = "none";
defparam \greenEW~I .operation_mode = "output";
defparam \greenEW~I .output_async_reset = "none";
defparam \greenEW~I .output_power_up = "low";
defparam \greenEW~I .output_register_mode = "none";
defparam \greenEW~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \out[0]~I (
	.datain(!\WideOr0~0_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(out[0]));
// synopsys translate_off
defparam \out[0]~I .input_async_reset = "none";
defparam \out[0]~I .input_power_up = "low";
defparam \out[0]~I .input_register_mode = "none";
defparam \out[0]~I .input_sync_reset = "none";
defparam \out[0]~I .oe_async_reset = "none";
defparam \out[0]~I .oe_power_up = "low";
defparam \out[0]~I .oe_register_mode = "none";
defparam \out[0]~I .oe_sync_reset = "none";
defparam \out[0]~I .operation_mode = "output";
defparam \out[0]~I .output_async_reset = "none";
defparam \out[0]~I .output_power_up = "low";
defparam \out[0]~I .output_register_mode = "none";
defparam \out[0]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \out[1]~I (
	.datain(\out~2_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(out[1]));
// synopsys translate_off
defparam \out[1]~I .input_async_reset = "none";
defparam \out[1]~I .input_power_up = "low";
defparam \out[1]~I .input_register_mode = "none";
defparam \out[1]~I .input_sync_reset = "none";
defparam \out[1]~I .oe_async_reset = "none";
defparam \out[1]~I .oe_power_up = "low";
defparam \out[1]~I .oe_register_mode = "none";
defparam \out[1]~I .oe_sync_reset = "none";
defparam \out[1]~I .operation_mode = "output";
defparam \out[1]~I .output_async_reset = "none";
defparam \out[1]~I .output_power_up = "low";
defparam \out[1]~I .output_register_mode = "none";
defparam \out[1]~I .output_sync_reset = "none";
// synopsys translate_on

cycloneii_io \out[2]~I (
	.datain(\out~3_combout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(out[2]));
// synopsys translate_off
defparam \out[2]~I .input_async_reset = "none";
defparam \out[2]~I .input_power_up = "low";
defparam \out[2]~I .input_register_mode = "none";
defparam \out[2]~I .input_sync_reset = "none";
defparam \out[2]~I .oe_async_reset = "none";
defparam \out[2]~I .oe_power_up = "low";
defparam \out[2]~I .oe_register_mode = "none";
defparam \out[2]~I .oe_sync_reset = "none";
defparam \out[2]~I .operation_mode = "output";
defparam \out[2]~I .output_async_reset = "none";
defparam \out[2]~I .output_power_up = "low";
defparam \out[2]~I .output_register_mode = "none";
defparam \out[2]~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
